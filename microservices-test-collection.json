{
	"info": {
		"_postman_id": "a8b5e3c7-f9d4-4e8c-9f5a-d5e9c7d8b6a5",
		"name": "Microservices Learning App",
		"description": "Collection for testing the Microservices Learning App with API Gateway, Users, Products, and Orders services",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API Gateway",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"health"
							]
						},
						"description": "Check if the API Gateway is healthy"
					},
					"response": []
				},
				{
					"name": "Service Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"status"
							]
						},
						"description": "Check the status of all services including RabbitMQ connection"
					},
					"response": []
				}
			],
			"description": "API Gateway endpoints for health checks and service status"
		},
		{
			"name": "Users Service",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Get all users through the API Gateway"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get a specific user by ID"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New User\",\n    \"email\": \"newuser@example.com\",\n    \"role\": \"customer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Create a new user"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated User Name\",\n    \"email\": \"updated@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"1"
							]
						},
						"description": "Update an existing user"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"5"
							]
						},
						"description": "Delete a user"
					},
					"response": []
				},
				{
					"name": "Seed Users Data",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/seed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"seed"
							]
						},
						"description": "Reset users data to initial seed data"
					},
					"response": []
				},
				{
					"name": "Direct Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"health"
							]
						},
						"description": "Check if the Users Service is healthy (direct call)"
					},
					"response": []
				}
			],
			"description": "Users Service endpoints for managing users"
		},
		{
			"name": "Products Service",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products"
							]
						},
						"description": "Get all products through the API Gateway"
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/products/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products",
								"1"
							]
						},
						"description": "Get a specific product by ID"
					},
					"response": []
				},
				{
					"name": "Get Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/products/category/electronics",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products",
								"category",
								"electronics"
							]
						},
						"description": "Get products by category"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Product\",\n    \"price\": 49.99,\n    \"stock\": 25,\n    \"category\": \"electronics\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products"
							]
						},
						"description": "Create a new product"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Product Name\",\n    \"price\": 59.99,\n    \"stock\": 30\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/products/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products",
								"1"
							]
						},
						"description": "Update an existing product"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/products/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products",
								"8"
							]
						},
						"description": "Delete a product"
					},
					"response": []
				},
				{
					"name": "Seed Products Data",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/products/seed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products",
								"seed"
							]
						},
						"description": "Reset products data to initial seed data"
					},
					"response": []
				},
				{
					"name": "Direct Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"health"
							]
						},
						"description": "Check if the Products Service is healthy (direct call)"
					},
					"response": []
				}
			],
			"description": "Products Service endpoints for managing products"
		},
		{
			"name": "Orders Service",
			"item": [
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders"
							]
						},
						"description": "Get all orders through the API Gateway"
					},
					"response": []
				},
				{
					"name": "Get Orders by User ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/orders/user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders",
								"user",
								"1"
							]
						},
						"description": "Get orders for a specific user"
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1,\n    \"products\": [\n        { \"productId\": 2, \"quantity\": 1 },\n        { \"productId\": 4, \"quantity\": 2 }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders"
							]
						},
						"description": "Create a new order"
					},
					"response": []
				},
				{
					"name": "Update Order Status",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"shipped\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/orders/2/status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders",
								"2",
								"status"
							]
						},
						"description": "Update the status of an order"
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/orders/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders",
								"3"
							]
						},
						"description": "Delete an order"
					},
					"response": []
				},
				{
					"name": "Seed Orders Data",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/orders/seed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"orders",
								"seed"
							]
						},
						"description": "Reset orders data to initial seed data"
					},
					"response": []
				},
				{
					"name": "Direct Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3003/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3003",
							"path": [
								"health"
							]
						},
						"description": "Check if the Orders Service is healthy (direct call)"
					},
					"response": []
				}
			],
			"description": "Orders Service endpoints for managing orders"
		},
		{
			"name": "RabbitMQ",
			"item": [
				{
					"name": "RabbitMQ Management UI",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:15672",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "15672"
						},
						"description": "Access the RabbitMQ Management UI (username: guest, password: guest)"
					},
					"response": []
				}
			],
			"description": "RabbitMQ Management UI access"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
